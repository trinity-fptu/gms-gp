// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240429093659_AddProductAndRawMaterialProperty")]
    partial class AddProductAndRawMaterialProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.DeliveryStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupplemental")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PurchasingOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StageOrder")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int?>("TotalTypeMaterial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingOrderId");

                    b.ToTable("DeliveryStages");
                });

            modelBuilder.Entity("Domain.Entities.ExpectedMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductionPlanId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double>("RequireQuantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductionPlanId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ExpectedMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Inspect.InspectionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovingInspectorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryStageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestInspectDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovingInspectorId");

                    b.HasIndex("DeliveryStageId");

                    b.HasIndex("RequestStaffId");

                    b.ToTable("InspectionRequests");
                });

            modelBuilder.Entity("Domain.Entities.Inspection.InspectionForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspectLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InspectionRequestId")
                        .HasColumnType("int");

                    b.Property<string>("InspectorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InspectionRequestId")
                        .IsUnique();

                    b.ToTable("InspectionForms");
                });

            modelBuilder.Entity("Domain.Entities.Inspection.MaterialInspectResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InspectStatus")
                        .HasColumnType("int");

                    b.Property<double?>("InspectionFailQuantity")
                        .HasColumnType("float");

                    b.Property<int>("InspectionFormId")
                        .HasColumnType("int");

                    b.Property<double?>("InspectionPassQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaterialPerPackage")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseMaterialId")
                        .HasColumnType("int");

                    b.Property<double>("RequestQuantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("InspectionFormId");

                    b.HasIndex("PurchaseMaterialId")
                        .IsUnique();

                    b.ToTable("MaterialInspectResults");
                });

            modelBuilder.Entity("Domain.Entities.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaterialCategories");
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PurchasingOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.OrderMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaterialPerPackage")
                        .HasColumnType("float");

                    b.Property<double>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<double>("PackageQuantity")
                        .HasColumnType("float");

                    b.Property<int>("PurchasingOrderId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingOrderId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("OrderMaterials");
                });

            modelBuilder.Entity("Domain.Entities.PO_Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PurchasingOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasingStaffId")
                        .HasColumnType("int");

                    b.Property<string>("ReportAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResolveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierApprovingStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingOrderId");

                    b.HasIndex("PurchasingStaffId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PO_Reports");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSize")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Domain.Entities.ProductInPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionPlanId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductionPlanId");

                    b.ToTable("ProductInPlans");
                });

            modelBuilder.Entity("Domain.Entities.ProductMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ProductMaterials");
                });

            modelBuilder.Entity("Domain.Entities.ProductionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlanEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductionPlanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("ProductionPlanCode")
                        .IsUnique();

                    b.ToTable("ProductionPlans");
                });

            modelBuilder.Entity("Domain.Entities.PurchaseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AfterInspectQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyMaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("DeliveredQuantity")
                        .HasColumnType("float");

                    b.Property<int?>("DeliveryStageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MainImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaterialPerPackage")
                        .HasColumnType("float");

                    b.Property<int>("Package")
                        .HasColumnType("int");

                    b.Property<double>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PlanInspectDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("ReturnQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TempExportDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TempImportDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double?>("TotalQuantity")
                        .HasColumnType("float");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseMaterialId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryStageId");

                    b.HasIndex("RawMaterialId");

                    b.HasIndex("WarehouseMaterialId");

                    b.ToTable("PurchaseMaterials");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerApproveStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumOfDeliveryStage")
                        .HasColumnType("int");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PurchasingPlanId")
                        .HasColumnType("int");

                    b.Property<int>("PurchasingStaffId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverCompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierApproveStatus")
                        .HasColumnType("int");

                    b.Property<string>("SupplierCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierTaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuppplierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalMaterialType")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("POCode")
                        .IsUnique()
                        .HasFilter("[POCode] IS NOT NULL");

                    b.HasIndex("PurchasingPlanId");

                    b.HasIndex("PurchasingStaffId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchasingOrders");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProcessStatus")
                        .HasColumnType("int");

                    b.Property<int>("ProductionPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasingManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlanCode")
                        .IsUnique();

                    b.HasIndex("ProductionPlanId");

                    b.HasIndex("PurchasingManagerId");

                    b.ToTable("PurchasingPlans");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FinishedQuantity")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProcessedQuantity")
                        .HasColumnType("float");

                    b.Property<int>("PurchasingPlanId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasingStaffId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("RemainedQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TaskEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TaskStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingPlanId");

                    b.HasIndex("PurchasingStaffId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("PurchasingTasks");
                });

            modelBuilder.Entity("Domain.Entities.RawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("ChemicalClarity")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<int?>("DiameterUnit")
                        .HasColumnType("int");

                    b.Property<double?>("EstimatePrice")
                        .HasColumnType("float");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<int>("MaterialCategoryId")
                        .HasColumnType("int");

                    b.Property<double?>("MaxToleranceWeight")
                        .HasColumnType("float");

                    b.Property<double?>("MinToleranceWeight")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Package")
                        .HasColumnType("int");

                    b.Property<int?>("Shape")
                        .HasColumnType("int");

                    b.Property<int?>("SizeUnitEnum")
                        .HasColumnType("int");

                    b.Property<double?>("StorageDuration")
                        .HasColumnType("float");

                    b.Property<string>("StorageGuide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThreadRatio")
                        .HasColumnType("int");

                    b.Property<int?>("Unit")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.Property<int?>("WeightUnit")
                        .HasColumnType("int");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.ToTable("RawMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(980),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(994),
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1002),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1002),
                            Name = "Purchasing Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1003),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1003),
                            Name = "Purchasing Staff"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1004),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1005),
                            Name = "Warehouse Staff"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1005),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1006),
                            Name = "Inspector"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1006),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1007),
                            Name = "Supplier"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1007),
                            IsDeleted = false,
                            LastModifiedDate = new DateTime(2024, 4, 29, 16, 36, 58, 963, DateTimeKind.Local).AddTicks(1008),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InspectorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchasingManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchasingStaffId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("InspectorId")
                        .IsUnique()
                        .HasFilter("[InspectorId] IS NOT NULL");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.HasIndex("PurchasingManagerId")
                        .IsUnique()
                        .HasFilter("[PurchasingManagerId] IS NOT NULL");

                    b.HasIndex("PurchasingStaffId")
                        .IsUnique()
                        .HasFilter("[PurchasingStaffId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("StaffCode")
                        .IsUnique()
                        .HasFilter("[StaffCode] IS NOT NULL");

                    b.HasIndex("SupplierId")
                        .IsUnique()
                        .HasFilter("[SupplierId] IS NOT NULL");

                    b.HasIndex("WarehouseStaffId")
                        .IsUnique()
                        .HasFilter("[WarehouseStaffId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Inspector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inspectors", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Managers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole.PurchasingManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PurchasingManagers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole.PurchasingStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PurchasingStaffs", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTaxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UserRole.SupplierAccountRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApproveManagerId")
                        .HasColumnType("int");

                    b.Property<int>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTaxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestStaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproveManagerId");

                    b.HasIndex("RequestStaffId");

                    b.ToTable("SupplierAccountRequests");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.WarehouseStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WarehouseStaffs", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Domain.Entities.WarehouseMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("ReturnQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RawMaterialId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("WarehouseMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.ImportMainWarehouseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ApproveWStaffId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryStageId")
                        .HasColumnType("int");

                    b.Property<int>("InspectorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReasonContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApproveWStaffId");

                    b.HasIndex("DeliveryStageId");

                    b.HasIndex("InspectorId");

                    b.ToTable("ImportMainWarehouseRequests");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.TempWarehouseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproveStatus")
                        .HasColumnType("int");

                    b.Property<int?>("ApproveWStaffId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryStageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestInspectorId")
                        .HasColumnType("int");

                    b.Property<string>("RequestReasonContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestStaffId")
                        .HasColumnType("int");

                    b.Property<string>("RequestTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproveWStaffId");

                    b.HasIndex("DeliveryStageId");

                    b.HasIndex("RequestInspectorId");

                    b.HasIndex("RequestStaffId");

                    b.ToTable("TempWarehouseRequests");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.WarehouseForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApproveWarehouseStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryStageId")
                        .HasColumnType("int");

                    b.Property<string>("FormCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormType")
                        .HasColumnType("int");

                    b.Property<int?>("ImportMainWarehouseRequestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiveWarehouse")
                        .HasColumnType("int");

                    b.Property<string>("RequestStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TempWarehouseRequestId")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryStageId");

                    b.HasIndex("ImportMainWarehouseRequestId")
                        .IsUnique()
                        .HasFilter("[ImportMainWarehouseRequestId] IS NOT NULL");

                    b.HasIndex("TempWarehouseRequestId")
                        .IsUnique()
                        .HasFilter("[TempWarehouseRequestId] IS NOT NULL");

                    b.ToTable("WarehouseForms");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.WarehouseFormMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FormStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaterialPerPackage")
                        .HasColumnType("float");

                    b.Property<double?>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseMaterialId")
                        .HasColumnType("int");

                    b.Property<double?>("RequestQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<int>("WarehouseFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseMaterialId");

                    b.HasIndex("WarehouseFormId");

                    b.ToTable("WarehouseFormMaterials");
                });

            modelBuilder.Entity("Domain.Entities.DeliveryStage", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingOrder", "PurchasingOrder")
                        .WithMany("DeliveryStages")
                        .HasForeignKey("PurchasingOrderId");

                    b.Navigation("PurchasingOrder");
                });

            modelBuilder.Entity("Domain.Entities.ExpectedMaterial", b =>
                {
                    b.HasOne("Domain.Entities.ProductionPlan", "ProductionPlan")
                        .WithMany("ExpectedMaterials")
                        .HasForeignKey("ProductionPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("ExpectedMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductionPlan");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("Domain.Entities.Inspect.InspectionRequest", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.Inspector", "ApprovingInspector")
                        .WithMany("InspectionRequests")
                        .HasForeignKey("ApprovingInspectorId");

                    b.HasOne("Domain.Entities.DeliveryStage", "DeliveryStage")
                        .WithMany("InspectionRequests")
                        .HasForeignKey("DeliveryStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "RequestStaff")
                        .WithMany("InspectionRequests")
                        .HasForeignKey("RequestStaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApprovingInspector");

                    b.Navigation("DeliveryStage");

                    b.Navigation("RequestStaff");
                });

            modelBuilder.Entity("Domain.Entities.Inspection.InspectionForm", b =>
                {
                    b.HasOne("Domain.Entities.Inspect.InspectionRequest", "InspectionRequest")
                        .WithOne("InspectionForm")
                        .HasForeignKey("Domain.Entities.Inspection.InspectionForm", "InspectionRequestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InspectionRequest");
                });

            modelBuilder.Entity("Domain.Entities.Inspection.MaterialInspectResult", b =>
                {
                    b.HasOne("Domain.Entities.Inspection.InspectionForm", "InspectionForm")
                        .WithMany("MaterialInspectResults")
                        .HasForeignKey("InspectionFormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.PurchaseMaterial", "PurchaseMaterial")
                        .WithOne("MaterialInspectResult")
                        .HasForeignKey("Domain.Entities.Inspection.MaterialInspectResult", "PurchaseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InspectionForm");

                    b.Navigation("PurchaseMaterial");
                });

            modelBuilder.Entity("Domain.Entities.Notification", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingOrder", "PurchasingOrder")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchasingOrder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.OrderMaterial", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingOrder", "PurchasingOrder")
                        .WithMany("OrderMaterials")
                        .HasForeignKey("PurchasingOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("OrderMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchasingOrder");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("Domain.Entities.PO_Report", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingOrder", "PurchasingOrder")
                        .WithMany("PO_Reports")
                        .HasForeignKey("PurchasingOrderId");

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "PurchasingStaff")
                        .WithMany("PO_Reports")
                        .HasForeignKey("PurchasingStaffId");

                    b.HasOne("Domain.Entities.UserRole.Supplier", "Supplier")
                        .WithMany("PO_Reports")
                        .HasForeignKey("SupplierId");

                    b.Navigation("PurchasingOrder");

                    b.Navigation("PurchasingStaff");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("Domain.Entities.ProductInPlan", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductInPlans")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ProductionPlan", "ProductionPlan")
                        .WithMany("ProductInPlans")
                        .HasForeignKey("ProductionPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductionPlan");
                });

            modelBuilder.Entity("Domain.Entities.ProductMaterial", b =>
                {
                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("Domain.Entities.ProductionPlan", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.Manager", "Manager")
                        .WithMany("ProductionPlans")
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Domain.Entities.PurchaseMaterial", b =>
                {
                    b.HasOne("Domain.Entities.DeliveryStage", "DeliveryStage")
                        .WithMany("PurchaseMaterials")
                        .HasForeignKey("DeliveryStageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("PurchaseMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.WarehouseMaterial", "WarehouseMaterial")
                        .WithMany("PurchaseMaterials")
                        .HasForeignKey("WarehouseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DeliveryStage");

                    b.Navigation("RawMaterial");

                    b.Navigation("WarehouseMaterial");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingOrder", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingPlan", "PurchasingPlan")
                        .WithMany("PurchasingOrders")
                        .HasForeignKey("PurchasingPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "PurchasingStaff")
                        .WithMany("PurchasingOrders")
                        .HasForeignKey("PurchasingStaffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.Supplier", "Supplier")
                        .WithMany("PurchasingOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchasingPlan");

                    b.Navigation("PurchasingStaff");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingPlan", b =>
                {
                    b.HasOne("Domain.Entities.ProductionPlan", "ProductionPlan")
                        .WithMany("PurchasingPlans")
                        .HasForeignKey("ProductionPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.PurchasingManager", "PurchasingManager")
                        .WithMany("PurchasingPlans")
                        .HasForeignKey("PurchasingManagerId");

                    b.Navigation("ProductionPlan");

                    b.Navigation("PurchasingManager");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingTask", b =>
                {
                    b.HasOne("Domain.Entities.PurchasingPlan", "PurchasingPlan")
                        .WithMany("PurchaseTasks")
                        .HasForeignKey("PurchasingPlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "PurchasingStaff")
                        .WithMany("PurchasingTasks")
                        .HasForeignKey("PurchasingStaffId");

                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("PurchasingTasks")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchasingPlan");

                    b.Navigation("PurchasingStaff");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("Domain.Entities.RawMaterial", b =>
                {
                    b.HasOne("Domain.Entities.MaterialCategory", "MaterialCategory")
                        .WithMany("RawMaterials")
                        .HasForeignKey("MaterialCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MaterialCategory");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.Inspector", "Inspector")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "InspectorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.UserRole.Manager", "Manager")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.UserRole.PurchasingManager", "PurchasingManager")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "PurchasingManagerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "PurchasingStaff")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "PurchasingStaffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("Domain.Entities.UserRole.Supplier", "Supplier")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.UserRole.WarehouseStaff", "WarehouseStaff")
                        .WithOne("User")
                        .HasForeignKey("Domain.Entities.User", "WarehouseStaffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Inspector");

                    b.Navigation("Manager");

                    b.Navigation("PurchasingManager");

                    b.Navigation("PurchasingStaff");

                    b.Navigation("Role");

                    b.Navigation("Supplier");

                    b.Navigation("WarehouseStaff");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.SupplierAccountRequest", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.Manager", "ApproveManager")
                        .WithMany("SupplierAccountRequests")
                        .HasForeignKey("ApproveManagerId");

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "RequestStaff")
                        .WithMany("SupplierAccountRequests")
                        .HasForeignKey("RequestStaffId");

                    b.Navigation("ApproveManager");

                    b.Navigation("RequestStaff");
                });

            modelBuilder.Entity("Domain.Entities.WarehouseMaterial", b =>
                {
                    b.HasOne("Domain.Entities.RawMaterial", "RawMaterial")
                        .WithMany("WarehouseMaterials")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Warehouse", "Warehouse")
                        .WithMany("WarehouseMaterials")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RawMaterial");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.ImportMainWarehouseRequest", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.WarehouseStaff", "ApproveWStaff")
                        .WithMany("ImportMainWarehouseRequests")
                        .HasForeignKey("ApproveWStaffId");

                    b.HasOne("Domain.Entities.DeliveryStage", "DeliveryStage")
                        .WithMany("ImportMainWarehouseRequests")
                        .HasForeignKey("DeliveryStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.Inspector", "Inspector")
                        .WithMany("ImportMainWarehouseRequests")
                        .HasForeignKey("InspectorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApproveWStaff");

                    b.Navigation("DeliveryStage");

                    b.Navigation("Inspector");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.TempWarehouseRequest", b =>
                {
                    b.HasOne("Domain.Entities.UserRole.WarehouseStaff", "ApproveWStaff")
                        .WithMany("TempWarehouseRequests")
                        .HasForeignKey("ApproveWStaffId");

                    b.HasOne("Domain.Entities.DeliveryStage", "DeliveryStage")
                        .WithMany("TempWarehouseRequests")
                        .HasForeignKey("DeliveryStageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UserRole.Inspector", "RequestInspector")
                        .WithMany("TempWarehouseRequests")
                        .HasForeignKey("RequestInspectorId");

                    b.HasOne("Domain.Entities.UserRole.PurchasingStaff", "RequestStaff")
                        .WithMany("TempWarehouseRequests")
                        .HasForeignKey("RequestStaffId");

                    b.Navigation("ApproveWStaff");

                    b.Navigation("DeliveryStage");

                    b.Navigation("RequestInspector");

                    b.Navigation("RequestStaff");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.WarehouseForm", b =>
                {
                    b.HasOne("Domain.Entities.DeliveryStage", "DeliveryStage")
                        .WithMany("WarehouseForms")
                        .HasForeignKey("DeliveryStageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Domain.Entities.Warehousing.ImportMainWarehouseRequest", "ImportMainWarehouseRequest")
                        .WithOne("WarehouseForm")
                        .HasForeignKey("Domain.Entities.Warehousing.WarehouseForm", "ImportMainWarehouseRequestId");

                    b.HasOne("Domain.Entities.Warehousing.TempWarehouseRequest", "TempWarehouseRequest")
                        .WithOne("WarehouseForm")
                        .HasForeignKey("Domain.Entities.Warehousing.WarehouseForm", "TempWarehouseRequestId");

                    b.Navigation("DeliveryStage");

                    b.Navigation("ImportMainWarehouseRequest");

                    b.Navigation("TempWarehouseRequest");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.WarehouseFormMaterial", b =>
                {
                    b.HasOne("Domain.Entities.PurchaseMaterial", "PurchaseMaterial")
                        .WithMany("WarehouseFormMaterials")
                        .HasForeignKey("PurchaseMaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Warehousing.WarehouseForm", "WarehouseForm")
                        .WithMany("WarehouseFormMaterials")
                        .HasForeignKey("WarehouseFormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PurchaseMaterial");

                    b.Navigation("WarehouseForm");
                });

            modelBuilder.Entity("Domain.Entities.DeliveryStage", b =>
                {
                    b.Navigation("ImportMainWarehouseRequests");

                    b.Navigation("InspectionRequests");

                    b.Navigation("PurchaseMaterials");

                    b.Navigation("TempWarehouseRequests");

                    b.Navigation("WarehouseForms");
                });

            modelBuilder.Entity("Domain.Entities.Inspect.InspectionRequest", b =>
                {
                    b.Navigation("InspectionForm");
                });

            modelBuilder.Entity("Domain.Entities.Inspection.InspectionForm", b =>
                {
                    b.Navigation("MaterialInspectResults");
                });

            modelBuilder.Entity("Domain.Entities.MaterialCategory", b =>
                {
                    b.Navigation("RawMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductInPlans");

                    b.Navigation("ProductMaterials");
                });

            modelBuilder.Entity("Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.ProductionPlan", b =>
                {
                    b.Navigation("ExpectedMaterials");

                    b.Navigation("ProductInPlans");

                    b.Navigation("PurchasingPlans");
                });

            modelBuilder.Entity("Domain.Entities.PurchaseMaterial", b =>
                {
                    b.Navigation("MaterialInspectResult");

                    b.Navigation("WarehouseFormMaterials");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingOrder", b =>
                {
                    b.Navigation("DeliveryStages");

                    b.Navigation("Notifications");

                    b.Navigation("OrderMaterials");

                    b.Navigation("PO_Reports");
                });

            modelBuilder.Entity("Domain.Entities.PurchasingPlan", b =>
                {
                    b.Navigation("PurchaseTasks");

                    b.Navigation("PurchasingOrders");
                });

            modelBuilder.Entity("Domain.Entities.RawMaterial", b =>
                {
                    b.Navigation("ExpectedMaterials");

                    b.Navigation("OrderMaterials");

                    b.Navigation("ProductMaterials");

                    b.Navigation("PurchaseMaterials");

                    b.Navigation("PurchasingTasks");

                    b.Navigation("WarehouseMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Inspector", b =>
                {
                    b.Navigation("ImportMainWarehouseRequests");

                    b.Navigation("InspectionRequests");

                    b.Navigation("TempWarehouseRequests");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Manager", b =>
                {
                    b.Navigation("ProductionPlans");

                    b.Navigation("SupplierAccountRequests");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.PurchasingManager", b =>
                {
                    b.Navigation("PurchasingPlans");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.PurchasingStaff", b =>
                {
                    b.Navigation("InspectionRequests");

                    b.Navigation("PO_Reports");

                    b.Navigation("PurchasingOrders");

                    b.Navigation("PurchasingTasks");

                    b.Navigation("SupplierAccountRequests");

                    b.Navigation("TempWarehouseRequests");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.Supplier", b =>
                {
                    b.Navigation("PO_Reports");

                    b.Navigation("PurchasingOrders");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.UserRole.WarehouseStaff", b =>
                {
                    b.Navigation("ImportMainWarehouseRequests");

                    b.Navigation("TempWarehouseRequests");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Warehouse", b =>
                {
                    b.Navigation("WarehouseMaterials");
                });

            modelBuilder.Entity("Domain.Entities.WarehouseMaterial", b =>
                {
                    b.Navigation("PurchaseMaterials");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.ImportMainWarehouseRequest", b =>
                {
                    b.Navigation("WarehouseForm");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.TempWarehouseRequest", b =>
                {
                    b.Navigation("WarehouseForm");
                });

            modelBuilder.Entity("Domain.Entities.Warehousing.WarehouseForm", b =>
                {
                    b.Navigation("WarehouseFormMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
